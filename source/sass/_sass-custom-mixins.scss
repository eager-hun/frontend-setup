/**
 * @file
 * Custom SASS mixins.
 *
 * Mixins vs Extending utility-role Placeholders?
 *
 * Mixins won, placeholders lost so badly that they will not be used. Repetition
 * originating from using mixins will be mitigated by gzip serving the resulting
 * files (gzip works well on repeated patterns, they say).
 *
 * @see
 * http://www.sitepoint.com/avoid-sass-extend/
 * http://csswizardry.com/2014/11/when-to-use-extend-when-to-use-a-mixin/
 *
 * NOTES on basic syntax:
 * @code
 *   @mixin test-mixin--box($bg: gold, $padding: 1em) {
 *     background: $bg;
 *     padding: $padding;
 *
 *     @if $bg == (gold) and $padding == (1em) {
 *       border: 1px solid red;
 *     }
 *     @else if $bg == (gold) and $padding != (1em) {
 *       border: 5px solid red;
 *     }
 *     @else {
 *       border: 3px solid black;
 *     }
 *   }
 * @endcode
 */


// #############################################################################
// Resets.

@mixin bare-list {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

// Foundation seems to do this already.
@mixin strip-button {
  appearance: none;
  background-color: transparent;
  border: none;
  margin: 0;
  padding: 0;
}


// #############################################################################
// Basic utils.

@mixin hidden {
  // Hiding texts visually, but enabling screen readers to read them.
  // See http://webaim.org/techniques/css/invisiblecontent/ .
  height: 1px;
  left: -9999em;
  top: auto;
  overflow: hidden;
  position: absolute;
  width: 1px;
}


// #############################################################################
// Layout.

@mixin n-clearfix {
  // 'n' stands for the name of the author, @necolas.
  // See http://nicolasgallagher.com/micro-clearfix-hack/ .
  &:before,
  &:after {
    content: ' ';
    display: table;
  }
  &:after {
    clear: both;
  }
  // WARNING: This rule interferes with :before and :after pseudo-elements.
  //          Take that into account when applying this anywhere.
}


// #############################################################################
// Skin.

@mixin override-link-color($color) {
  & {
    border-bottom: 1px solid rgba($color, 0.5);
    text-decoration: none;
  }
  &,
  &:visited,
  &:hover,
  &:visited:hover {
    color: $color;
  }
  &:hover {
    border-bottom-color: $color;
  }
  &:focus {
    outline: 1px dotted rgba($color, 0.5);
    border-bottom: none;
  }
}

@mixin text-color-invert-zone {
  color: white;

  a:not([class]) {
    @include override-link-color($color: white);
  }
}
