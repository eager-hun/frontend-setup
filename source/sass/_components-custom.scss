/**
 * @file
 * Components - custom ones.
 */


// #############################################################################
// Boxes.

.box {
  background: color(blockfill);
  padding: $global-padding*0.5;

  @include breakpoint(wide) {
    padding: $global-padding;
  }
}
.box__title {
  @include box-title-appearance;

  margin-bottom: $global-margin*0.5;
}
.box__content {
  @include l-fit;
  @include line-height-fit($global-lineheight, bottom);

  &:first-child {
    @include line-height-fit($global-lineheight, top);
  }
}

.column--sidebar {
  .box {
    &,
    & p {
      line-height: $line-height-condensed;
    }
  }
  .box__content {
    @include line-height-fit($line-height-condensed, bottom);
  }
}

// -----------------------------------------------------------------------------
// Growing screens.

// Media query when the primary layout becomes multi-column.
@include breakpoint(wide) {
  .box {
    padding: $global-padding;
  }
  .box__title {
    margin-bottom: $global-margin;
  }
}


// #############################################################################
// Grid-demos.

// (These rules don't establish grids, don't even modify them, they just make
// items more visually identifiable; like the grid-demos part is a component on
// the page.)

.grid-demos {
  @include l-fit;

  & > h2:first-child,
  & > .h2:first-child {
    @include line-height-fit($header-lineheight, top, 1);
  }

  .row + .row {
    margin-top: 3rem;
  }
  .row + p {
    margin-top: 2.5rem;
  }
  p + .row {
    margin-top: 1.5rem;
  }

  .box {
    background: color(blockfill);

    &,
    & p {
      line-height: 1;
    }
  }
  .box__content {
    margin-top: 0;
    margin-bottom: 0;
  }
  code {
    background: none;
    border: none;
    color: color(minor);
    padding: 0;
  }
}
